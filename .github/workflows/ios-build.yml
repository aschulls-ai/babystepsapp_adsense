name: Build iOS App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - production

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Build React app
      working-directory: ./frontend
      run: |
        if [ "${{ github.event.inputs.build_type }}" = "production" ]; then
          npm run build
        else
          npm run build
        fi
        
    - name: Setup iOS development environment
      run: |
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        
    - name: Install CocoaPods
      run: sudo gem install cocoapods
      
    - name: Add iOS platform (if not exists)
      working-directory: ./frontend
      run: |
        if [ ! -d "ios" ]; then
          npx cap add ios
        fi
        
    - name: Sync Capacitor
      working-directory: ./frontend
      run: npx cap sync ios
      
    - name: Install iOS dependencies
      working-directory: ./frontend/ios/App
      run: pod install
      
    - name: Build iOS app
      working-directory: ./frontend
      run: |
        xcodebuild -workspace ios/App/App.xcworkspace \
          -scheme App \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath ios/App/build/App.xcarchive \
          archive
          
    - name: Export IPA
      working-directory: ./frontend
      run: |
        # Create export options plist
        cat > ios/App/ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>development</string>
            <key>teamID</key>
            <string>\${{ secrets.APPLE_TEAM_ID }}</string>
            <key>compileBitcode</key>
            <false/>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
        </dict>
        </plist>
        EOF
        
        # Export IPA
        xcodebuild -exportArchive \
          -archivePath ios/App/build/App.xcarchive \
          -exportPath ios/App/build \
          -exportOptionsPlist ios/App/ExportOptions.plist
          
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: baby-steps-ios-${{ github.run_number }}
        path: frontend/ios/App/build/*.ipa
        retention-days: 30
        
    - name: Upload to TestFlight (Production only)
      if: github.event.inputs.build_type == 'production' && github.ref == 'refs/heads/main'
      working-directory: ./frontend
      run: |
        # Install altool (part of Xcode command line tools)
        xcrun altool --upload-app \
          --type ios \
          --file ios/App/build/*.ipa \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}"