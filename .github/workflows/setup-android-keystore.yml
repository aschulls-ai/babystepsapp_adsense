name: Setup Android Keystore

on:
  workflow_dispatch:
    inputs:
      force_regenerate:
        description: 'Force regenerate keystore (will create new signing key)'
        required: false
        default: false
        type: boolean
  push:
    paths:
      - '.github/workflows/android-build.yml'
      - 'frontend/android/**'
    branches:
      - main

jobs:
  setup-keystore:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout Code
      uses: actions/checkout@v4
      
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🔍 Check Existing Secrets
      id: check-secrets
      run: |
        echo "Checking for existing keystore secrets..."
        
        # Check if required secrets exist (we can't actually read them, but we can check if they're set)
        if [ -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
          echo "keystore_exists=true" >> $GITHUB_OUTPUT
          echo "✅ ANDROID_KEYSTORE_BASE64 exists"
        else
          echo "keystore_exists=false" >> $GITHUB_OUTPUT
          echo "❌ ANDROID_KEYSTORE_BASE64 missing"
        fi
        
        if [ -n "${{ secrets.KEYSTORE_PASSWORD }}" ]; then
          echo "password_exists=true" >> $GITHUB_OUTPUT
          echo "✅ KEYSTORE_PASSWORD exists"
        else
          echo "password_exists=false" >> $GITHUB_OUTPUT
          echo "❌ KEYSTORE_PASSWORD missing"
        fi
        
        if [ -n "${{ secrets.KEY_ALIAS }}" ]; then
          echo "alias_exists=true" >> $GITHUB_OUTPUT
          echo "✅ KEY_ALIAS exists"
        else
          echo "alias_exists=false" >> $GITHUB_OUTPUT
          echo "❌ KEY_ALIAS missing"
        fi
        
        if [ -n "${{ secrets.KEY_PASSWORD }}" ]; then
          echo "key_password_exists=true" >> $GITHUB_OUTPUT
          echo "✅ KEY_PASSWORD exists"
        else
          echo "key_password_exists=false" >> $GITHUB_OUTPUT
          echo "❌ KEY_PASSWORD missing"
        fi
        
    - name: 🔐 Generate New Keystore
      if: steps.check-secrets.outputs.keystore_exists != 'true' || github.event.inputs.force_regenerate == 'true'
      id: generate-keystore
      run: |
        echo "🔐 Generating new Android keystore for Baby Steps App"
        echo "================================================"
        
        # Keystore configuration
        KEYSTORE_FILE="baby-steps-release.keystore"
        KEY_ALIAS="babysteps"
        STORE_PASSWORD="babysteps2024"
        KEY_PASSWORD="babysteps2024"
        VALIDITY_DAYS=10000
        
        # Generate the keystore
        keytool -genkeypair -v \
          -keystore "$KEYSTORE_FILE" \
          -alias "$KEY_ALIAS" \
          -keyalg RSA \
          -keysize 2048 \
          -validity $VALIDITY_DAYS \
          -storepass "$STORE_PASSWORD" \
          -keypass "$KEY_PASSWORD" \
          -dname "CN=Baby Steps,OU=Baby Steps,O=Baby Steps App,L=Unknown,ST=Unknown,C=US"
        
        echo "✅ Keystore created successfully"
        
        # Show keystore details
        echo "📋 Keystore Details:"
        echo "==================="
        keytool -list -v -keystore "$KEYSTORE_FILE" -alias "$KEY_ALIAS" -storepass "$STORE_PASSWORD" | grep -E "(Alias|Valid|SHA1|SHA256)"
        
        # Convert to base64
        KEYSTORE_BASE64=$(base64 -w 0 "$KEYSTORE_FILE")
        echo "keystore_base64=$KEYSTORE_BASE64" >> $GITHUB_OUTPUT
        echo "store_password=$STORE_PASSWORD" >> $GITHUB_OUTPUT
        echo "key_alias=$KEY_ALIAS" >> $GITHUB_OUTPUT
        echo "key_password=$KEY_PASSWORD" >> $GITHUB_OUTPUT
        
        # Get SHA1 fingerprint
        SHA1_FINGERPRINT=$(keytool -list -v -keystore "$KEYSTORE_FILE" -alias "$KEY_ALIAS" -storepass "$STORE_PASSWORD" | grep SHA1 | sed 's/.*SHA1: //')
        echo "sha1_fingerprint=$SHA1_FINGERPRINT" >> $GITHUB_OUTPUT
        
        echo "🔑 SHA1 Fingerprint: $SHA1_FINGERPRINT"
        
    - name: 📝 Create Setup Instructions
      if: steps.check-secrets.outputs.keystore_exists != 'true' || github.event.inputs.force_regenerate == 'true'
      run: |
        cat << EOF > keystore-setup-instructions.md
        # 🔐 Android Keystore Setup Instructions
        
        A new Android keystore has been generated for the Baby Steps app.
        
        ## 📋 Required GitHub Secrets
        
        Please add the following secrets to your GitHub repository:
        
        **Go to: Repository Settings → Secrets and Variables → Actions → New Repository Secret**
        
        ### 1. ANDROID_KEYSTORE_BASE64
        \`\`\`
        ${{ steps.generate-keystore.outputs.keystore_base64 }}
        \`\`\`
        
        ### 2. KEYSTORE_PASSWORD
        \`\`\`
        ${{ steps.generate-keystore.outputs.store_password }}
        \`\`\`
        
        ### 3. KEY_ALIAS
        \`\`\`
        ${{ steps.generate-keystore.outputs.key_alias }}
        \`\`\`
        
        ### 4. KEY_PASSWORD
        \`\`\`
        ${{ steps.generate-keystore.outputs.key_password }}
        \`\`\`
        
        ## 🔑 Signing Certificate Information
        
        - **SHA1 Fingerprint**: \`${{ steps.generate-keystore.outputs.sha1_fingerprint }}\`
        - **Valid Until**: $(date -d '+10000 days' '+%B %d, %Y')
        
        ## ⚠️ Important Notes
        
        1. **Keep this information secure** - Store it in a password manager
        2. **Add all secrets to GitHub** - The Android build will fail without them
        3. **Use this SHA1 fingerprint** - For Google Play Console app signing setup
        4. **Consistent signing** - This keystore will be used for all future builds
        
        ## 🚀 Next Steps
        
        1. Add all four secrets to GitHub repository settings
        2. Run the Android build workflow
        3. Upload the generated .aab file to Google Play Console
        4. The SHA1 fingerprint above should match in the Play Console
        
        EOF
        
        echo "📝 Setup instructions created in keystore-setup-instructions.md"
        
    - name: 📤 Upload Setup Instructions
      if: steps.check-secrets.outputs.keystore_exists != 'true' || github.event.inputs.force_regenerate == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: keystore-setup-instructions
        path: keystore-setup-instructions.md
        retention-days: 30
        
    - name: 📤 Upload Keystore File (Backup)
      if: steps.check-secrets.outputs.keystore_exists != 'true' || github.event.inputs.force_regenerate == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: android-keystore-backup
        path: baby-steps-release.keystore
        retention-days: 30
        
    - name: ✅ Summary Report
      run: |
        echo "## 🔐 Android Keystore Setup Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.check-secrets.outputs.keystore_exists }}" == "true" ]; then
          echo "✅ **Keystore Status**: Secrets already configured" >> $GITHUB_STEP_SUMMARY
          echo "🔧 **Action Required**: None - Android builds should work correctly" >> $GITHUB_STEP_SUMMARY
        else
          echo "🔄 **Keystore Status**: New keystore generated" >> $GITHUB_STEP_SUMMARY
          echo "🔧 **Action Required**: Add secrets to GitHub repository" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Required Secrets" >> $GITHUB_STEP_SUMMARY
          echo "- ANDROID_KEYSTORE_BASE64" >> $GITHUB_STEP_SUMMARY
          echo "- KEYSTORE_PASSWORD" >> $GITHUB_STEP_SUMMARY
          echo "- KEY_ALIAS" >> $GITHUB_STEP_SUMMARY
          echo "- KEY_PASSWORD" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📥 **Download**: Check the 'keystore-setup-instructions' artifact for complete setup details" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔑 **SHA1 Fingerprint**: \`${{ steps.generate-keystore.outputs.sha1_fingerprint || 'Using existing keystore' }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🚀 **Next Steps**:" >> $GITHUB_STEP_SUMMARY
        echo "1. Add required secrets (if new keystore generated)" >> $GITHUB_STEP_SUMMARY
        echo "2. Run the Android build workflow" >> $GITHUB_STEP_SUMMARY
        echo "3. Upload .aab to Google Play Console" >> $GITHUB_STEP_SUMMARY