name: Clean & Fix Keystore

on:
  workflow_dispatch:
    inputs:
      confirm_clean:
        description: 'Type "YES" to confirm cleaning existing keystore'
        required: true
        default: 'NO'

jobs:
  clean-and-regenerate:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout Code
      uses: actions/checkout@v4
      
    - name: ✅ Validate Confirmation
      run: |
        if [ "${{ github.event.inputs.confirm_clean }}" != "YES" ]; then
          echo "❌ User did not confirm cleaning. Input was: '${{ github.event.inputs.confirm_clean }}'"
          echo "To proceed, re-run the workflow and type 'YES' in the confirmation field."
          exit 1
        fi
        echo "✅ User confirmed cleaning existing keystore"
        
    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🧹 Clean Existing Keystore
      run: |
        echo "🧹 Cleaning any existing keystore files..."
        
        # Remove any existing keystore files
        find . -name "*.keystore" -type f -delete
        find . -name "baby-steps-*.keystore" -type f -delete
        
        echo "✅ Cleanup completed"
        
    - name: 🔐 Generate Fresh Keystore
      id: generate-keystore
      run: |
        echo "🔐 Generating fresh Android keystore for Baby Steps App"
        echo "===================================================="
        
        # Keystore configuration
        KEYSTORE_FILE="baby-steps-release-$(date +%Y%m%d).keystore"
        KEY_ALIAS="babysteps"
        STORE_PASSWORD="babysteps2024"
        KEY_PASSWORD="babysteps2024"
        VALIDITY_DAYS=10000
        
        echo "📁 Using keystore file: $KEYSTORE_FILE"
        
        # Generate the keystore
        keytool -genkeypair -v \
          -keystore "$KEYSTORE_FILE" \
          -alias "$KEY_ALIAS" \
          -keyalg RSA \
          -keysize 2048 \
          -validity $VALIDITY_DAYS \
          -storepass "$STORE_PASSWORD" \
          -keypass "$KEY_PASSWORD" \
          -dname "CN=Baby Steps,OU=Baby Steps,O=Baby Steps App,L=Unknown,ST=Unknown,C=US"
        
        echo "✅ Fresh keystore created successfully"
        
        # Show keystore details
        echo "📋 Keystore Details:"
        echo "==================="
        keytool -list -v -keystore "$KEYSTORE_FILE" -alias "$KEY_ALIAS" -storepass "$STORE_PASSWORD" | grep -E "(Alias|Valid|SHA1|SHA256)"
        
        # Convert to base64
        KEYSTORE_BASE64=$(base64 -w 0 "$KEYSTORE_FILE")
        echo "keystore_base64=$KEYSTORE_BASE64" >> $GITHUB_OUTPUT
        echo "store_password=$STORE_PASSWORD" >> $GITHUB_OUTPUT
        echo "key_alias=$KEY_ALIAS" >> $GITHUB_OUTPUT
        echo "key_password=$KEY_PASSWORD" >> $GITHUB_OUTPUT
        echo "keystore_file=$KEYSTORE_FILE" >> $GITHUB_OUTPUT
        
        # Get SHA1 fingerprint
        SHA1_FINGERPRINT=$(keytool -list -v -keystore "$KEYSTORE_FILE" -alias "$KEY_ALIAS" -storepass "$STORE_PASSWORD" | grep SHA1 | sed 's/.*SHA1: //')
        echo "sha1_fingerprint=$SHA1_FINGERPRINT" >> $GITHUB_OUTPUT
        
        echo "🔑 SHA1 Fingerprint: $SHA1_FINGERPRINT"
        
    - name: 📝 Create Clean Setup Instructions
      run: |
        cat << EOF > clean-keystore-setup-instructions.md
        # 🧹 Clean Android Keystore Setup - $(date)
        
        A fresh Android keystore has been generated after cleaning existing files.
        
        ## 🔑 New Keystore Information
        
        - **File**: ${{ steps.generate-keystore.outputs.keystore_file }}
        - **SHA1 Fingerprint**: ${{ steps.generate-keystore.outputs.sha1_fingerprint }}
        - **Generated**: $(date)
        
        ## 📋 Required GitHub Secrets
        
        **IMPORTANT**: Delete existing secrets and add these new ones:
        
        ### 1. ANDROID_KEYSTORE_BASE64
        \`\`\`
        ${{ steps.generate-keystore.outputs.keystore_base64 }}
        \`\`\`
        
        ### 2. KEYSTORE_PASSWORD
        \`\`\`
        ${{ steps.generate-keystore.outputs.store_password }}
        \`\`\`
        
        ### 3. KEY_ALIAS
        \`\`\`
        ${{ steps.generate-keystore.outputs.key_alias }}
        \`\`\`
        
        ### 4. KEY_PASSWORD
        \`\`\`
        ${{ steps.generate-keystore.outputs.key_password }}
        \`\`\`
        
        ## 🚀 Next Steps
        
        1. **Delete old secrets** in GitHub repository settings
        2. **Add all four new secrets** above
        3. **Run Android build workflow**
        4. **Upload new .aab to Google Play Console**
        5. **Update Play Console with new SHA1 fingerprint**
        
        ## ⚠️ Important Notes
        
        - This is a **new keystore** - existing apps will need to be updated
        - Use this **SHA1 fingerprint** in Google Play Console
        - Keep this keystore secure for all future releases
        
        EOF
        
        echo "📝 Clean setup instructions created"
        
    - name: 📤 Upload Clean Instructions
      uses: actions/upload-artifact@v4
      with:
        name: clean-keystore-setup-instructions
        path: clean-keystore-setup-instructions.md
        retention-days: 30
        
    - name: 📤 Upload Clean Keystore
      uses: actions/upload-artifact@v4
      with:
        name: clean-android-keystore
        path: ${{ steps.generate-keystore.outputs.keystore_file }}
        retention-days: 30
        
    - name: ✅ Clean Setup Summary
      run: |
        echo "## 🧹 Clean Keystore Setup Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Status**: Fresh keystore generated successfully" >> $GITHUB_STEP_SUMMARY
        echo "🔑 **New SHA1**: \`${{ steps.generate-keystore.outputs.sha1_fingerprint }}\`" >> $GITHUB_STEP_SUMMARY
        echo "📁 **File**: ${{ steps.generate-keystore.outputs.keystore_file }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔧 Required Actions" >> $GITHUB_STEP_SUMMARY
        echo "1. **Download** the 'clean-keystore-setup-instructions' artifact" >> $GITHUB_STEP_SUMMARY
        echo "2. **Delete existing secrets** from GitHub repository" >> $GITHUB_STEP_SUMMARY
        echo "3. **Add new secrets** from the downloaded instructions" >> $GITHUB_STEP_SUMMARY
        echo "4. **Run Android build** workflow" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "⚠️ **Note**: This creates a new signing key - update Google Play Console accordingly" >> $GITHUB_STEP_SUMMARY